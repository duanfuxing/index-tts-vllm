[unix_http_server]
file=/var/run/supervisor.sock   ; supervisor socket文件路径
chmod=0700                       ; socket文件权限

[supervisord]
logfile=/var/log/supervisord.log ; 主日志文件
logfile_maxbytes=50MB            ; 日志文件最大大小
logfile_backups=10               ; 日志文件备份数量
loglevel=info                    ; 日志级别
pidfile=/var/run/supervisord.pid ; PID文件
nodaemon=false                   ; 是否在前台运行
minfds=1024                      ; 最小文件描述符数量
minprocs=200                     ; 最小进程数量

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; 使用unix socket连接

; TTS API服务器配置
[program:tts-api-server]
command=python3 server/api_server.py --model_dir %(ENV_MODEL_DIR)s --host %(ENV_HOST)s --port %(ENV_PORT)s --gpu_memory_utilization %(ENV_GPU_MEMORY_UTILIZATION)s  ; 启动命令，使用环境变量配置
directory=%(ENV_SUPERVISOR_PROJECT_DIR)s     ; 工作目录，从环境变量获取项目路径
user=%(ENV_SUPERVISOR_USER)s                 ; 运行用户，从环境变量获取
autostart=%(ENV_SUPERVISOR_AUTOSTART)s       ; 是否自动启动，从环境变量获取
autorestart=%(ENV_SUPERVISOR_AUTORESTART)s   ; 是否自动重启，从环境变量获取
startsecs=%(ENV_SUPERVISOR_STARTSECS)s       ; 启动后等待时间（秒），从环境变量获取
startretries=%(ENV_SUPERVISOR_STARTRETRIES)s ; 启动失败重试次数，从环境变量获取
redirect_stderr=true                         ; 重定向错误输出到标准输出
stdout_logfile=%(ENV_SUPERVISOR_PROJECT_DIR)s/logs/api_server.log           ; 标准输出日志文件
stdout_logfile_maxbytes=%(ENV_SUPERVISOR_LOG_MAXBYTES)s                     ; 日志文件最大大小，从环境变量获取
stdout_logfile_backups=%(ENV_SUPERVISOR_LOG_BACKUPS)s                       ; 日志文件备份数量，从环境变量获取
stderr_logfile=%(ENV_SUPERVISOR_PROJECT_DIR)s/logs/api_server_error.log     ; 错误输出日志文件
stderr_logfile_maxbytes=%(ENV_SUPERVISOR_LOG_MAXBYTES)s                     ; 错误日志文件最大大小，从环境变量获取
stderr_logfile_backups=%(ENV_SUPERVISOR_LOG_BACKUPS)s                       ; 错误日志文件备份数量，从环境变量获取
environment=PYTHONPATH="%(ENV_SUPERVISOR_PROJECT_DIR)s"                     ; 环境变量设置，Python路径
priority=%(ENV_SUPERVISOR_API_PRIORITY)s                                    ; 进程优先级，从环境变量获取

; TTS任务处理器配置
[program:tts-task-worker]
command=python3 server/task_worker.py --model-dir %(ENV_MODEL_DIR)s --database-url %(ENV_DATABASE_URL)s --task-type long_text --audio-output-dir %(ENV_AUDIO_OUTPUT_DIR)s  ; 任务处理器启动命令
directory=%(ENV_SUPERVISOR_PROJECT_DIR)s     ; 工作目录，从环境变量获取项目路径
user=%(ENV_SUPERVISOR_USER)s                 ; 运行用户，从环境变量获取
autostart=%(ENV_SUPERVISOR_AUTOSTART)s       ; 是否自动启动，从环境变量获取
autorestart=%(ENV_SUPERVISOR_AUTORESTART)s   ; 是否自动重启，从环境变量获取
startsecs=%(ENV_SUPERVISOR_STARTSECS)s       ; 启动后等待时间（秒），从环境变量获取
startretries=%(ENV_SUPERVISOR_STARTRETRIES)s ; 启动失败重试次数，从环境变量获取
redirect_stderr=true                         ; 重定向错误输出到标准输出
stdout_logfile=%(ENV_SUPERVISOR_PROJECT_DIR)s/logs/worker_long.log           ; 标准输出日志文件
stdout_logfile_maxbytes=%(ENV_SUPERVISOR_LOG_MAXBYTES)s                      ; 日志文件最大大小，从环境变量获取
stdout_logfile_backups=%(ENV_SUPERVISOR_LOG_BACKUPS)s                        ; 日志文件备份数量，从环境变量获取
stderr_logfile=%(ENV_SUPERVISOR_PROJECT_DIR)s/logs/worker_long_error.log     ; 错误输出日志文件
stderr_logfile_maxbytes=%(ENV_SUPERVISOR_LOG_MAXBYTES)s                      ; 错误日志文件最大大小，从环境变量获取
stderr_logfile_backups=%(ENV_SUPERVISOR_LOG_BACKUPS)s                        ; 错误日志文件备份数量，从环境变量获取
environment=PYTHONPATH="%(ENV_SUPERVISOR_PROJECT_DIR)s"                      ; 环境变量设置，Python路径
priority=%(ENV_SUPERVISOR_WORKER_PRIORITY)s                                  ; 进程优先级，从环境变量获取

; 程序组配置
[group:tts-services]
programs=tts-api-server,tts-task-worker  ; 包含的程序列表：API服务器、任务处理器